name: Localstack

on:
  issue_comment:
    types: [created]

env:
  TF_VERSION: 1.0.3
  WORKING_DIR: ./terraform
  DEFAULT_REGION: "us-east-1"
  AWS_ACCOUNT_ID: "111111111111"
  AWS_ACCESS_KEY_ID: "test"
  AWS_SECRET_ACCESS_KEY: "test"

jobs:
  validation:
    if: (github.event.comment.body == 'localstack run')
    name: Localstack
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Run docker-compose up
        id: docker_compose_up
        run: |
          ls
          ls ../
          pwd
          docker-compose -f ../localstack/docker-compose.yml up --force-recreate -d
          echo "Waiting for localstack/health, attempting every 5s"
          sleep 30
          until $(curl --fail http://localhost:4566/health | grep "\"lambda\": \"running\"" > /dev/null); do
              echo 'waiting...'
              sleep 5
          done
          echo 'Success: Localstack started'
          sleep 5
      - name: Check ps
        run: docker ps
      - name: Check logs
        run: docker logs localstack_localstack-target_1

      - name: Starting terraform
        run: |
          pwd
          ls
          echo ${{ github.event.number }}
          echo ${{ github.event.pull_request.head.sha }}
          echo ${{github.event.pull_request.base.sha}}
          echo ${GITHUB_REF}
          echo "commit_id ${{ github.event.issue.commit_id }}"
          echo "commit_id ${{ github.event.comment.commit_id }}"
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Run docker-compose down
        id: docker_compose_down
        run: |
          docker-compose -f ../localstack/docker-compose.yml down
      - name: Check ps
        run: docker ps